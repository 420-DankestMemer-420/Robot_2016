// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by RobotBuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc2832.Robot_2016;

import org.usfirst.frc2832.Robot_2016.HID.RecordableGamepad;
import org.usfirst.frc2832.Robot_2016.commands.*;
import org.usfirst.frc2832.Robot_2016.commands.autonomous.*;

import edu.wpi.first.wpilibj.buttons.JoystickButton;
import edu.wpi.first.wpilibj.smartdashboard.SendableChooser;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;


/**
 * This class is the glue that binds the controls on the physical operator
 * interface to the commands and command groups that allow control of the robot.
 */
public class OI {
    //// CREATING BUTTONS
    // One type of button is a joystick button which is any button on a joystick.
    // You create one by telling it which joystick it's on and which button
    // number it is.
    // Joystick stick = new Joystick(port);
    // Button button = new JoystickButton(stick, buttonNumber);
    
    // There are a few additional built in buttons you can use. Additionally,
    // by subclassing Button you can create custom triggers and bind those to
    // commands the same as any other Button.
    
    //// TRIGGERING COMMANDS WITH BUTTONS
    // Once you have a button, it's trivial to bind it to a button in one of
    // three ways:
    
    // Start the command when the button is pressed and let it run the command
    // until it is finished as determined by it's isFinished method.
    // button.whenPressed(new ExampleCommand());
    
    // Run the command while the button is being held down and interrupt it once
    // the button is released.
    // button.whileHeld(new ExampleCommand());
    
    // Start the command when the button is released  and let it run the command
    // until it is finished as determined by it's isFinished method.
    // button.whenReleased(new ExampleCommand());

    
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	
	public RecordableGamepad gamepad;
	public JoystickButton aButton;
	public JoystickButton bButton;
	public JoystickButton xButton;
	public JoystickButton yButton;
	
	public SendableChooser autonomous;
	
    public OI() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    	
    	//GamePad Settings
    	gamepad = new RecordableGamepad(0);
	    aButton = new JoystickButton(gamepad,1);
	    aButton.whileHeld(new MoveAimerDown());
	    bButton = new JoystickButton(gamepad,2);
	    bButton.whileHeld(new MoveAimerUp());
	    xButton = new JoystickButton(gamepad,3);
	    xButton.whenPressed(new GoToLevel(1));
	    yButton = new JoystickButton(gamepad,4);
	    yButton.whenPressed(new Shoot());
	    
	    RecordableGamepad.dashboardSetup();
	    
	    refreshRecordedAutonIndex();
    	
    	autonomous = new SendableChooser();
    	autonomous.addDefault("Basic auton", new AutonomousCommand());
    	autonomous.addObject("Move forward", new MoveForward(5));
    	
    	SmartDashboard.putData("Autonomous selection", autonomous);
    	
    	SmartDashboard.putData("Autonomous Command", new AutonomousCommand());
          
        SmartDashboard.putData("shoot", new Shoot());
          
      	SmartDashboard.putData("Flip Motors", new InterfaceFlip());
      	
      	SmartDashboard.putData("Move Forward", new MoveForward(5));
      	
      	SmartDashboard.putData("Rotate Angle", new RotateAngle(90));

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }

	public static void refreshRecordedAutonIndex() {
		
	}
    
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
}

